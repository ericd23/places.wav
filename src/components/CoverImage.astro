---
import { Image } from 'astro:assets';

export interface Props {
  collection: string;
  slug: string;
  cover: string;
  alt: string;
  class?: string;
}

const { collection, slug, cover, alt, class: className = '' } = Astro.props;

// Get all images from content directories
const images = import.meta.glob('/src/content/**/*.{jpeg,jpg,png,webp}');

// Build the path to the cover image - handle relative path prefix
const cleanCover = cover.startsWith('./') ? cover.slice(2) : cover;
const coverPath = `/src/content/${collection}/${slug}/${cleanCover}`;
const imageModule = images[coverPath];

let resolvedImage = null;
if (imageModule) {
  try {
    const imported = await imageModule();
    resolvedImage = (imported as any)?.default || imported;
  } catch (e) {
    console.warn(`Failed to load image: ${coverPath}`);
  }
}

---

{resolvedImage ? (
  <Image 
    src={resolvedImage} 
    alt={alt}
    width={300}
    height={300}
    loading="lazy"
    class={`object-cover aspect-square w-full ${className}`}
  />
) : (
  <div class={`bg-gray-100 aspect-square w-full ${className}`}>
  </div>
)}