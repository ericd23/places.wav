---
interface Props { url: string }
const { url } = Astro.props;

function getEmbedCode(url: string) {
  // SoundCloud (fixed-height)
  if (url.includes('soundcloud.com')) {
    const encodedUrl = encodeURIComponent(url);
    return `
      <iframe
        class="w-full h-[166px] border-0"
        allow="autoplay"
        src="https://w.soundcloud.com/player/?url=${encodedUrl}&color=%23000000&auto_play=false&hide_related=false&show_comments=true&show_user=true&show_reposts=false&show_teaser=true">
      </iframe>`;
  }

  // YouTube (16:9)
  if (url.includes('youtube.com') || url.includes('youtu.be')) {
    let videoId = '';
    if (url.includes('youtube.com/watch?v=')) {
      videoId = url.split('v=')[1]?.split('&')[0] || '';
    } else if (url.includes('youtu.be/')) {
      videoId = url.split('youtu.be/')[1]?.split('?')[0] || '';
    }
    if (videoId) {
      // Use a ratio wrapper so height is derived from width
      return `
        <div class="relative w-full" style="padding-top:56.25%;">
          <iframe
            class="absolute inset-0 w-full h-full border-0"
            src="https://www.youtube.com/embed/${videoId}"
            title="YouTube video player"
            allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
            allowfullscreen>
          </iframe>
        </div>`;
    }
  }

  return null;
}

const embedCode = getEmbedCode(url);
---

{embedCode && (
  <div class="mb-8 not-prose" set:html={embedCode} />
)}