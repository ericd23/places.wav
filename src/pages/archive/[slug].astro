---
import Layout from '../../layouts/Layout.astro';
import EmbedPlayer from '../../components/EmbedPlayer.astro';

import { getCollection } from 'astro:content';

export async function getStaticPaths() {
  const archives = await getCollection('archive');
  return archives.map((item) => ({
    params: { slug: item.slug },
    props: { item },
  }));
}

const { item } = Astro.props;
const { Content } = await item.render();
---

<Layout title={`${item.data.title} - Archive - Places`}>
  <div class="p-4 max-w-2xl mx-auto">
    <nav class="mb-8">
      <a href="/archive" class="text-gray-600 hover:text-black text-sm">
        ‚Üê Back
      </a>
    </nav>

    <header class="mb-8">
      <h1 class="text-2xl mb-2">
        {item.data.title}
      </h1>
      <div class="text-sm text-gray-600 mb-4">
        {item.data.type}
      </div>
      <div class="text-xs text-gray-500 mb-6">
        {item.data.date.toLocaleDateString('en-US', { 
          year: 'numeric', 
          month: 'long',
          day: 'numeric'
        })}
      </div>
      <p class="text-xs text-gray-500 mb-4">
        {item.data.description}
      </p>
      
      {item.data.tags && item.data.tags.length > 0 && (
        <div class="flex flex-wrap gap-2 mb-8">
          {item.data.tags.map((tag) => (
            <a 
              href={`/tags/${tag}`}
              class="text-xs text-gray-500 hover:text-black"
            >
              #{tag}
            </a>
          ))}
        </div>
      )}
    </header>

    {item.data.embed_url && (
      <EmbedPlayer url={item.data.embed_url} />
    )}

    <article class="text-sm leading-relaxed text-gray-700">
      <div class="prose prose-sm max-w-none">
        <Content />
      </div>
    </article>

    <nav class="mt-8 pt-4 border-t border-gray-200">
      <a href="/archive" class="text-gray-600 hover:text-black text-sm">
        All archive
      </a>
    </nav>
  </div>
</Layout>